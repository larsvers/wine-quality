<h1>The shape of the model</h1>

<div class="section no-trigger">
  <p>
    Many models learn by looking at the data and fit a curve that best represents the relationship between the predicting properties and the target variable &mdash; <i>Quality</i> in our case. 
  </p>
  <p>
    Let’s &mdash; for simplicity’s sake &mdash; say, we want to build a model with a single predictor: <i>Alcohol</i>. So, our model will try and predict the quality of each wine, based on its alcohol content alone. What would we do?
  </p>
  <p>
    One of the simpler options is to build a so-called <a href="https://setosa.io/ev/ordinary-least-squares-regression/">Ordinary Least Squares Regression</a> model that predicts wine quality solely on <i>Alcohol</i>, which might look something like this:
  </p>
</div>

<div class="section section-56">
  <p>
    The model in this case very much <strong>is</strong> the line. Reality &mdash; the actual distirbution of our wines in the scatter plot &mdash; is of course more complex as we can see. Our model is rather a reduced approximation of reality &mdash; it captures how the story goes &mdash; and it fits into a beautifully simple equation that goes:
  </p>
  <p class="center">
    <i><strong>y = m &times; x + b</strong></i>
  </p>
  <p class="tight-bottom">
    <strong>y</strong> represents the quality output value 
  </p>
  <p class="tight-top tight-bottom">
    <strong>x</strong> the alcohol input value. 
  </p>
  <p class="tight-top tight-bottom">
    In geometric terms, <strong>b</strong> represents the intercept (the point the line crosses the y axis when <strong>x = 0</strong>) and
  </p>
  <p class="tight-top tight-bottom">
    <strong>m</strong> the slope of the line. 
  </p>
  <p class="tight-top">
    In conceptual terms <strong>m</strong> represents the increase in <strong>y</strong> when we increase <strong>x</strong> by one unit. In our case <strong>m</strong> tells us how much our quality goes up if we add one percent of alcohol.
  <p>
  </p>
    We can now use this equation to predict <i>Quality</i> solely on <i>Alcohol</i>.
  </p>
</div>

<div class="section section-57">
  <p>
    Plugging in an alcohol value of <i>x = 12%</i>, for example, will return a quality (a <i>y</i> value) just above 6. 
  </p>
  <p>
    Theat's nice! We can do this for any value, will, however, soon hit a problem, that might bend reality just a little too much:
  </p>
</div>

<div class="section section-58">
  <p>
    Because we’re dealing with a line, we could theoretically extend it indefinitely into any direction, returning rather non-sensical data: quality values above 10 or even negative quality values. 
  </p>
  <p>
    Instead, we’d like a model equation that doesn’t produce a straight line.
  </p>
</div>

<div class="section section-59">
  <p>
    To get there, we first make things worse, by simplifying our continuous data to a binary variable: 0 for <span class="bad">bad</span>, 1 for <span class="good">good</span>. This indeed exacerbates our line problems. 
  </p>
  <p>
    To win, we need a different model function. One that doesn’t produce a line but something like this:
  </p>
</div>

<div class="section section-60">
  <p>
    This is a typical curve for a <a href="https://en.wikipedia.org/wiki/Logistic_regression">Logistic Regression</a> model.
  </p>
  <p>
    Having swapped the labels to 0 for <span class="bad">bad</span> and 1 for <span class="good">good</span>, we can now express the relationship between alcohol and quality in probabilities from 0 to 100%! 
  <p>
  </p>
    If a wine has an alcohol level of, for example, 9, we can read off a probability of 4% of being good. If it has an alcohol level of 12 it has an 86% probability of being good.
  </p>
  <p>
    This way we are not necessarily forced to give a binary answer but can express the likelihood of a wine being good or bad. In addition, the magnitude of the likelihood helps us understand how certain we can be in our classification. 50% good is obviously not quite as certain as 100% good.
  </p>
  <p>
    It’s like with a badly drawn sloth. We aren’t totally sure about it being a sloth, but we can be pretty confident.
  </p>
</div>

